name: Python

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest wheel setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --exclude deps --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --exclude deps --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build and install
        run: python -m pip install .
      - name: Test with pytest
        run: pytest python/

  test-pypi:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Build package and upload from docker (Linux)
        if: runner.os == 'Linux'
        run: |
          docker run --rm -v "${PWD}:/opt/OpenCC" \
            -e TWINE_USERNAME=__token__ \
            -e TWINE_PASSWORD=${{ secrets.PYPI_TOKEN }} \
            ubuntu:22.04 /bin/bash /opt/OpenCC/release-pypi-linux.sh testonly

      - name: Build package and upload (macOS)
        if: runner.os == 'macOS'
        run: bash release-pypi-macos.sh testonly
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: Build package and upload (Windows)
        if: runner.os == 'Windows'
        run: |
          C:\Miniconda/condabin/conda.bat init powershell
          ./release-pypi-windows.cmd testonly
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
